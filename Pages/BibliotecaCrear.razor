@page "/biblioteca-crear"
@using Lab14
@inject Biblioteca biblioteca
@using System.ComponentModel.DataAnnotations

<h3>Nueva Biblioteca de Música</h3>

<EditForm Model="@nuevoAlbum" OnValidSubmit="@CrearAlbum">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="tituloAlbum">Título del Álbum:</label>
        <InputText id="tituloAlbum" class="form-control" @bind-Value="@nuevoAlbum.TituloAlbum" />
        <ValidationMessage For="@(() => nuevoAlbum.TituloAlbum)" />
    </div>

    <div class="form-group">
        <label for="artistaAlbum">Artista del Álbum:</label>
        <InputText id="artistaAlbum" class="form-control" @bind-Value="@nuevoAlbum.ArtistaAlbum" />
        <ValidationMessage For="@(() => nuevoAlbum.ArtistaAlbum)" />
    </div>

    <div class="form-group">
        <label for="nombreCancion">Nombre de la Canción:</label>
        <InputText id="nombreCancion" class="form-control" @bind-Value="@nuevaCancion.NombreCancion" />
        <ValidationMessage For="@(() => nuevaCancion.NombreCancion)" />
    </div>

    <div class="form-group">
        <label for="artistaCancion">Artista de la Canción:</label>
        <InputText id="artistaCancion" class="form-control" @bind-Value="@nuevaCancion.ArtistaCancion" />
        <ValidationMessage For="@(() => nuevaCancion.ArtistaCancion)" />
    </div>

    <div class="form-group">
        <label for="duracionCancion">Duración de la Canción (hh:mm:ss):</label>
        <InputText id="duracionCancion" class="form-control" @bind-Value="@duracionCancion" />
        <ValidationMessage For="@(() => duracionCancion)" />
    </div>

    <button type="submit" class="btn btn-primary">Crear Álbum</button>
</EditForm>

@code {
    private Album nuevoAlbum = new Album();
    private Cancion nuevaCancion = new Cancion();
    private string duracionCancion = "";


    private void CrearAlbum()
    {
        if (TimeSpan.TryParse(duracionCancion, out TimeSpan duracion))
        {
            // Verificar si los campos NombreCancion y ArtistaCancion están vacíos
            if (string.IsNullOrEmpty(nuevaCancion.NombreCancion) || string.IsNullOrEmpty(nuevaCancion.ArtistaCancion))
            {
                // Manejar el caso en que los campos requeridos estén vacíos
                Console.WriteLine("El nombre y el artista de la canción son requeridos.");
                return; // No continuar con la creación del álbum si los campos requeridos están vacíos
            }

            nuevaCancion.Duracion = duracion;
            nuevoAlbum.Canciones.Add(nuevaCancion);
            nuevoAlbum.FechaPublicacion = DateTime.Now;

            biblioteca.IngresarAlbum(nuevoAlbum);

            // Reiniciar los campos para una nueva entrada
            nuevoAlbum = new Album();
            nuevaCancion = new Cancion();
            duracionCancion = string.Empty;
        }
        else
        {
            // Manejar el error de formato de duración
            Console.WriteLine("Formato de duración de canción inválido.");
        }
    }
}



